---
swagger: "2.0"
info:
  description: "API for the HackZurich'18 Vertec 4.0 Project"
  version: "1.0.0"
  title: "HackZurich'18 Vertec 4.0"
host: "localhost:8080"
basePath: "/api"
tags:
- name: "task"
- name: "project"
schemes:
- "http"
paths:
  /projects:
    get:
      tags:
      - "project"
      summary: "Finds all the projects"
      operationId: "readProjects"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        404:
          description: "Invalid status value"
      x-swagger-router-controller: "Project"
  /project:
    post:
      tags:
      - "project"
      summary: "Add a new project"
      description: ""
      operationId: "createProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Project object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Project"
  /project/{projectId}:
    get:
      tags:
      - "project"
      summary: "Find project by ID"
      description: "Returns a single project"
      operationId: "getProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Project"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Project not found"
      x-swagger-router-controller: "Project"
    put:
      tags:
      - "project"
      summary: "Updates a project"
      description: ""
      operationId: "updateProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Project object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Project"
    delete:
      tags:
      - "project"
      summary: "Deletes a project"
      description: ""
      operationId: "deleteProject"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "Project id to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Project not found"
      x-swagger-router-controller: "Project"
  /tasks:
    get:
      tags:
      - "task"
      summary: "Finds all the tasks"
      operationId: "readTasks"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
        404:
          description: "Invalid status value"
      x-swagger-router-controller: "Task"
  /task:
    post:
      tags:
      - "task"
      summary: "Add a new task"
      description: ""
      operationId: "createTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Task object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Task"
  /task/{taskId}:
    get:
      tags:
      - "task"
      summary: "Find task by ID"
      description: "Returns a single task"
      operationId: "getTaskById"
      produces:
      - "application/json"
      parameters:
      - name: "taskId"
        in: "path"
        description: "ID of task to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Task not found"
      x-swagger-router-controller: "Task"
    put:
      tags:
      - "task"
      summary: "Updates a task"
      description: ""
      operationId: "updateTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "taskId"
        in: "path"
        description: "ID of task that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Task object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Task"
    delete:
      tags:
      - "task"
      summary: "Deletes a task"
      description: ""
      operationId: "deleteTask"
      produces:
      - "application/json"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Task id to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Task not found"
      x-swagger-router-controller: "Task"
definitions:
  Project:
    type: "object"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      budget:
        type: "integer"
        format: "int64"
      start_date:
        type: "string"
        format: "date-time"
      end_date:
        type: "string"
        format: "date-time"
    example:
      end_date: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      _id: "_id"
      budget: 0
      start_date: "2000-01-23T04:56:07.000+00:00"
  ProjectState:
    type: "object"
    properties:
      _id:
        type: "string"
      project_id:
        type: "string"
      actual:
        type: "integer"
        format: "int64"
      number_of_tasks:
        type: "integer"
        format: "int64"
  Task:
    type: "object"
    properties:
      _id:
        type: "string"
      project_id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      budget:
        type: "integer"
        format: "int64"
      start_date:
        type: "string"
        format: "date-time"
      end_date:
        type: "string"
        format: "date-time"
    example:
      end_date: "2000-01-23T04:56:07.000+00:00"
      project_id: "project_id"
      name: "name"
      description: "description"
      _id: "_id"
      budget: 0
      start_date: "2000-01-23T04:56:07.000+00:00"
  TaskState:
    type: "object"
    properties:
      _id:
        type: "string"
      task_id:
        type: "string"
      actual:
        type: "integer"
        format: "int64"
      number_of_events:
        type: "integer"
        format: "int64"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
